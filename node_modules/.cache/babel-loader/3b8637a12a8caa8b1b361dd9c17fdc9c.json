{"ast":null,"code":"var _jsxFileName = \"/Users/sarahalt/code/power/sarahalt/client/src/components/Home/Projects.js\";\nimport React, { Component } from 'react';\nimport { PROJECTS } from '../../data/Projects';\nimport Box from '../General/Box';\nimport ExpandedBox from '../General/ExpandedBox';\nexport default class Projects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.update = () => {\n      this.setState({\n        width: window.innerWidth\n      });\n    };\n\n    this.openProject = id => {\n      if (id === this.state.openProject) {\n        this.setState({\n          openProject: 0\n        });\n      } else {\n        let split = 0;\n\n        if (this.state.width >= 1200) {\n          if (id <= 2) {\n            split = 2;\n          } else {\n            split = PROJECTS.length;\n          }\n        } else if (this.state.width < 90) {\n          split = id;\n        } else {\n          split = PROJECTS.length;\n        }\n\n        let firstHalf = PROJECTS.slice(0, split);\n        let secondHalf = PROJECTS.slice(split, PROJECTS.length);\n        this.setState({\n          firstItems: firstHalf,\n          lastItems: secondHalf,\n          openProject: id\n        });\n      }\n    };\n\n    this.state = {\n      openProject: 0,\n      firstItems: PROJECTS,\n      lastItems: [],\n      width: 0\n    };\n    this.openProject = this.openProject.bind(this);\n    window.addEventListener(\"resize\", this.update);\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"projects\",\n      ref: this.props.projects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"projects_overview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"projects_overview_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, \"My Projects\")), this.state.firstItems.map((eachProject, index) => {\n      return /*#__PURE__*/React.createElement(Box, {\n        item: eachProject,\n        openProject: this.openProject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      });\n    }), this.state.openProject != 0 ? /*#__PURE__*/React.createElement(ExpandedBox, {\n      item: PROJECTS[this.state.openProject],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }\n    }) : null, this.state.lastItems.map((eachProject, index) => {\n      return /*#__PURE__*/React.createElement(Box, {\n        item: eachProject,\n        openProject: this.openProject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      });\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/sarahalt/code/power/sarahalt/client/src/components/Home/Projects.js"],"names":["React","Component","PROJECTS","Box","ExpandedBox","Projects","constructor","props","update","setState","width","window","innerWidth","openProject","id","state","split","length","firstHalf","slice","secondHalf","firstItems","lastItems","bind","addEventListener","componentDidMount","render","projects","map","eachProject","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { PROJECTS } from '../../data/Projects';\nimport Box from '../General/Box';\nimport ExpandedBox from '../General/ExpandedBox';\n\nexport default class Projects extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n      openProject: 0,\n      firstItems: PROJECTS,\n      lastItems: [],\n      width: 0,\n    };\n    this.openProject = this.openProject.bind(this)\n    window.addEventListener(\"resize\", this.update);\n  }\n\n  componentDidMount() {\n    this.update()\n  }\n\n  update = () => {\n    this.setState({\n      width: window.innerWidth\n\t\t});\n  };\n  \n  openProject = (id) => {\n    if (id === this.state.openProject) {\n      this.setState({openProject: 0})\n    } else {\n      let split = 0;\n      if (this.state.width >= 1200) {\n        if (id<=2) {split = 2}\n        else {split = PROJECTS.length}\n      } else if (this.state.width < 90) {\n        split = id\n      } else {\n        split = PROJECTS.length\n      }\n\n        let firstHalf = PROJECTS.slice(0, split);\n        let secondHalf = PROJECTS.slice(split, PROJECTS.length);\n        this.setState({firstItems: firstHalf, lastItems: secondHalf, openProject: \n          id})\n    }\n  }\n  \n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"projects\" ref={this.props.projects}>\n\t\t\t\t<div className=\"projects_overview\">\n\t\t\t\t\t<div className=\"projects_overview_title\">\n\t\t\t\t\t\t<h2>My Projects</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.state.firstItems.map((eachProject, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Box item={eachProject} openProject={this.openProject}/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t\t{this.state.openProject != 0 ? <ExpandedBox item={PROJECTS[this.state.openProject]} /> : null}\n          {this.state.lastItems.map((eachProject, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Box item={eachProject} openProject={this.openProject}/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}