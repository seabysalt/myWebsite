{"ast":null,"code":"var _jsxFileName = \"/Users/sarahalt/code/power/sarahalt/client/src/components/General/Navbar.js\";\nimport React, { Component } from 'react';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleHover = x => {\n      this.setState({\n        hover: !this.state.hover\n      }, () => this.color(x));\n    };\n\n    this.color = x => {\n      let hoverStyle = this.props.hoverColor;\n\n      if (this.state.hover) {\n        if (x === \"experiences\") {\n          this.setState({\n            hoverExperiences: hoverStyle\n          });\n        } else if (x === \"projects\") {\n          this.setState({\n            hoverProjects: hoverStyle\n          });\n        } else if (x === \"contacts\") {\n          this.setState({\n            hoverContacts: hoverStyle\n          });\n        } else if (x === \"main\" && !this.props.showContact) {\n          this.setState({\n            hoverTitle: hoverStyle\n          });\n        }\n      } else {\n        this.setState({\n          hoverExperiences: this.props.colorMenu,\n          hoverProjects: this.props.colorMenu,\n          hoverTitle: this.props.colorTitle\n        });\n      }\n    };\n\n    this.state = {\n      hover: false,\n      hoverTitle: this.props.colorTitle\n    };\n  }\n\n  render() {\n    const hoverExperiences = this.state.hoverExperiences;\n    const hoverProjects = this.state.hoverProjects;\n    const hoverContacts = this.state.hoverContacts;\n    const hoverTitle = this.state.hoverTitle;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"navbar\",\n      className: `${this.props.scrollUp && 'scrollUp'}`,\n      ref: this.props.top,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: hoverTitle\n      },\n      onClick: () => this.props.main('main'),\n      onMouseOver: () => this.toggleHover('main'),\n      onMouseLeave: () => this.toggleHover('main'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Sarah Alt\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navbar_sections\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.props.jump,\n      onMouseOver: () => this.toggleHover('experiences'),\n      style: {\n        color: hoverExperiences,\n        borderBottomColor: hoverExperiences\n      },\n      onMouseLeave: () => this.toggleHover('experiences'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"Experiences\"), /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.props.jump2,\n      style: {\n        color: hoverProjects,\n        borderBottomColor: hoverProjects\n      },\n      onMouseOver: () => this.toggleHover('projects'),\n      onMouseLeave: () => this.toggleHover('projects'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Projects\"), this.props.showContact ? /*#__PURE__*/React.createElement(\"p\", {\n      onClick: () => this.props.contact(),\n      onMouseOver: () => this.toggleHover('contact'),\n      style: {\n        color: hoverContacts,\n        borderBottomColor: hoverContacts\n      },\n      onMouseLeave: () => this.toggleHover('contact'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 40\n      }\n    }, \"Contact\") : null));\n  }\n\n}\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/sarahalt/code/power/sarahalt/client/src/components/General/Navbar.js"],"names":["React","Component","Navbar","constructor","props","toggleHover","x","setState","hover","state","color","hoverStyle","hoverColor","hoverExperiences","hoverProjects","hoverContacts","showContact","hoverTitle","colorMenu","colorTitle","render","scrollUp","top","main","jump","borderBottomColor","jump2","contact"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;;AADmB,SAQnBC,WARmB,GAQJC,CAAD,IAAO;AACnB,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAApB,OAAd,EAA0C,MAAM,KAAKE,KAAL,CAAWJ,CAAX,CAAhD;AACD,KAVkB;;AAAA,SAYnBI,KAZmB,GAYVJ,CAAD,IAAO;AACb,UAAIK,UAAU,GAAG,KAAKP,KAAL,CAAWQ,UAA5B;;AACA,UAAI,KAAKH,KAAL,CAAWD,KAAf,EAAsB;AACpB,YAAIF,CAAC,KAAK,aAAV,EAAyB;AACvB,eAAKC,QAAL,CAAc;AAACM,YAAAA,gBAAgB,EAAEF;AAAnB,WAAd;AACD,SAFD,MAEO,IAAIL,CAAC,KAAK,UAAV,EAAsB;AAC3B,eAAKC,QAAL,CAAc;AAACO,YAAAA,aAAa,EAAEH;AAAhB,WAAd;AACD,SAFM,MAEA,IAAIL,CAAC,KAAK,UAAV,EAAsB;AAC3B,eAAKC,QAAL,CAAc;AAACQ,YAAAA,aAAa,EAAEJ;AAAhB,WAAd;AACD,SAFM,MAEA,IAAIL,CAAC,KAAK,MAAN,IAAgB,CAAC,KAAKF,KAAL,CAAWY,WAAhC,EAA6C;AAClD,eAAKT,QAAL,CAAc;AAACU,YAAAA,UAAU,EAAEN;AAAb,WAAd;AACD;AACF,OAVD,MAUO;AACL,aAAKJ,QAAL,CAAc;AAACM,UAAAA,gBAAgB,EAAE,KAAKT,KAAL,CAAWc,SAA9B;AAAyCJ,UAAAA,aAAa,EAAE,KAAKV,KAAL,CAAWc,SAAnE;AAA8ED,UAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWe;AAArG,SAAd;AACD;AACF,KA3BkB;;AAEnB,SAAKV,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE,KADE;AAETS,MAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWe;AAFd,KAAb;AAIC;;AAwBDC,EAAAA,MAAM,GAAG;AACP,UAAMP,gBAAgB,GAAG,KAAKJ,KAAL,CAAWI,gBAApC;AACA,UAAMC,aAAa,GAAG,KAAKL,KAAL,CAAWK,aAAjC;AACA,UAAMC,aAAa,GAAG,KAAKN,KAAL,CAAWM,aAAjC;AACA,UAAME,UAAU,GAAG,KAAKR,KAAL,CAAWQ,UAA9B;AAEA,wBACE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAiB,MAAA,SAAS,EAAG,GAAE,KAAKb,KAAL,CAAWiB,QAAX,IAAuB,UAAW,EAAjE;AAAoE,MAAA,GAAG,EAAE,KAAKjB,KAAL,CAAWkB,GAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAE;AAACZ,QAAAA,KAAK,EAAEO;AAAR,OAAX;AAAgC,MAAA,OAAO,EAAE,MAAM,KAAKb,KAAL,CAAWmB,IAAX,CAAgB,MAAhB,CAA/C;AAAwE,MAAA,WAAW,EAAE,MAAM,KAAKlB,WAAL,CAAiB,MAAjB,CAA3F;AACL,MAAA,YAAY,EAAE,MAAM,KAAKA,WAAL,CAAiB,MAAjB,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAGE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWoB,IAAvB;AAA6B,MAAA,WAAW,EAAE,MAAM,KAAKnB,WAAL,CAAiB,aAAjB,CAAhD;AAAiF,MAAA,KAAK,EAAE;AAACK,QAAAA,KAAK,EAAEG,gBAAR;AAA0BY,QAAAA,iBAAiB,EAAEZ;AAA7C,OAAxF;AACP,MAAA,YAAY,EAAE,MAAM,KAAKR,WAAL,CAAiB,aAAjB,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAGE;AAAG,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWsB,KAAvB;AAA8B,MAAA,KAAK,EAAE;AAAChB,QAAAA,KAAK,EAAEI,aAAR;AAAuBW,QAAAA,iBAAiB,EAAEX;AAA1C,OAArC;AAA+F,MAAA,WAAW,EAAE,MAAM,KAAKT,WAAL,CAAiB,UAAjB,CAAlH;AACP,MAAA,YAAY,EAAE,MAAM,KAAKA,WAAL,CAAiB,UAAjB,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAKI,KAAKD,KAAL,CAAWY,WAAZ,gBAA4B;AAAG,MAAA,OAAO,EAAE,MAAM,KAAKZ,KAAL,CAAWuB,OAAX,EAAlB;AAAuC,MAAA,WAAW,EAAE,MAAM,KAAKtB,WAAL,CAAiB,SAAjB,CAA1D;AAAuF,MAAA,KAAK,EAAE;AAACK,QAAAA,KAAK,EAAEK,aAAR;AAAuBU,QAAAA,iBAAiB,EAAEV;AAA1C,OAA9F;AACpC,MAAA,YAAY,EAAE,MAAM,KAAKV,WAAL,CAAiB,SAAjB,CADgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA5B,GACwD,IAN3D,CAHF,CADF;AAcD;;AAnD4B;;AAsD/B,eAAeH,MAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Navbar extends Component {\n  constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n      hover: false,\n      hoverTitle: this.props.colorTitle,\n    };\n  }\n  \n  toggleHover = (x) => {\n    this.setState({hover: !this.state.hover}, () => this.color(x))\n  }\n\n  color = (x) => {\n    let hoverStyle = this.props.hoverColor\n    if (this.state.hover) {\n      if (x === \"experiences\") {\n        this.setState({hoverExperiences: hoverStyle})\n      } else if (x === \"projects\") {\n        this.setState({hoverProjects: hoverStyle})\n      } else if (x === \"contacts\") {\n        this.setState({hoverContacts: hoverStyle})\n      } else if (x === \"main\" && !this.props.showContact) {\n        this.setState({hoverTitle: hoverStyle})\n      }\n    } else {\n      this.setState({hoverExperiences: this.props.colorMenu, hoverProjects: this.props.colorMenu, hoverTitle: this.props.colorTitle})\n    }\n  }\n\n\n  render() {\n    const hoverExperiences = this.state.hoverExperiences;\n    const hoverProjects = this.state.hoverProjects;\n    const hoverContacts = this.state.hoverContacts;\n    const hoverTitle = this.state.hoverTitle;\n\n    return (\n      <div id=\"navbar\" className={`${this.props.scrollUp && 'scrollUp'}`} ref={this.props.top}>\n        <h3 style={{color: hoverTitle}} onClick={() => this.props.main('main')} onMouseOver={() => this.toggleHover('main')}\n\t\t\tonMouseLeave={() => this.toggleHover('main')}>Sarah Alt</h3>\n        <div className=\"navbar_sections\">\n          <p onClick={this.props.jump} onMouseOver={() => this.toggleHover('experiences')} style={{color: hoverExperiences, borderBottomColor: hoverExperiences}}\n\t\t\tonMouseLeave={() => this.toggleHover('experiences')}>Experiences</p>\n          <p onClick={this.props.jump2} style={{color: hoverProjects, borderBottomColor: hoverProjects}} onMouseOver={() => this.toggleHover('projects')}\n\t\t\tonMouseLeave={() => this.toggleHover('projects')}>Projects</p>\n          {(this.props.showContact) ? (<p onClick={() => this.props.contact()}onMouseOver={() => this.toggleHover('contact')} style={{color: hoverContacts, borderBottomColor: hoverContacts}}\n\t\t\tonMouseLeave={() => this.toggleHover('contact')}>Contact</p>) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}