{"ast":null,"code":"var _jsxFileName = \"/Users/sarahalt/code/power/sarahalt/client/src/container/Home.js\";\nimport React, { Component } from 'react';\nimport Cover from '../components/Home/Cover';\nimport Experiences from '../components/Home/Experiences';\nimport Navbar from '../components/General/Navbar';\nimport Projects from '../components/Home/Projects';\nimport Footer from '../components/General/Footer';\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startAtTop = () => window.scrollTo(0, this.top.current.offsetTop);\n\n    this.jumpToExperiences = () => window.scrollTo(0, this.experiences.current.offsetTop - 20);\n\n    this.jumpToProjects = () => window.scrollTo(0, this.projects.current.offsetTop);\n\n    this.listenScrollEvent = e => {\n      this.setState({\n        didScroll: true\n      });\n      console.log('I scrolled');\n      let scrollTop = e.target.scrollingElement.scrollTop,\n          lastScrollTop = this.state.lastScrollTop;\n      /* \t\tif(Math.abs(lastScrollTop - scrollTop) <= this.state.delta) {\n      \t\t\treturn;\n      \t\t}\n      \t\t */\n\n      if (scrollTop > lastScrollTop && scrollTop > 90) {\n        this.setState({\n          scrollUp: true\n        });\n      }\n      /*     // Make sure they scroll more than delta\n          if(Math.abs(lastScrollTop - scrollTop) <= this.state.delta)\n              return;\n          \n          // If they scrolled down and are past the navbar, add class .nav-up.\n          // This is necessary so you never see what is \"behind\" the navbar.\n          if (scrollTop > lastScrollTop && scrollTop > this.state.navbarHeight){\n              // Scroll Down\n              $('header').removeClass('nav-down').addClass('nav-up');\n          } else {\n              // Scroll Up\n              if(scrollTop + $(window).height() < $(document).height()) {\n                  $('header').removeClass('nav-up').addClass('nav-down');\n              }\n          } */\n\n\n      this.setState({\n        lastScrollTop: scrollTop\n      });\n      console.log(scrollTop);\n    };\n\n    this.state = {\n      didMount: false,\n      didScroll: false,\n      lastScrollTop: 0,\n      delta: 5,\n      scrollUp: false\n    };\n    this.top = React.createRef();\n    this.experiences = React.createRef();\n    this.projects = React.createRef();\n  }\n\n  componentDidMount() {\n    this.startAtTop();\n    setTimeout(() => {\n      this.setState({\n        didMount: true\n      });\n    }, 0);\n    this.setState(this.props.location.state);\n    window.addEventListener('scroll', this.listenScrollEvent);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      jump: this.jumpToExperiences,\n      jump2: this.jumpToProjects,\n      top: this.top,\n      scrollUp: this.state.scrollUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Cover, {\n      jump: this.jumpToExperiences,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Experiences, {\n      experiences: this.experiences,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Projects, {\n      projects: this.projects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/sarahalt/code/power/sarahalt/client/src/container/Home.js"],"names":["React","Component","Cover","Experiences","Navbar","Projects","Footer","Home","constructor","props","startAtTop","window","scrollTo","top","current","offsetTop","jumpToExperiences","experiences","jumpToProjects","projects","listenScrollEvent","e","setState","didScroll","console","log","scrollTop","target","scrollingElement","lastScrollTop","state","scrollUp","didMount","delta","createRef","componentDidMount","setTimeout","location","addEventListener","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Cover from '../components/Home/Cover';\nimport Experiences from '../components/Home/Experiences';\nimport Navbar from '../components/General/Navbar';\nimport Projects from '../components/Home/Projects';\nimport Footer from '../components/General/Footer';\n\nexport default class Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdidMount: false,\n\t\t\tdidScroll: false,\n\t\t\tlastScrollTop: 0,\n\t\t\tdelta: 5,\n\t\t\tscrollUp: false,\n\t\t};\n\t\tthis.top = React.createRef();\n\t\tthis.experiences = React.createRef();\n\t\tthis.projects = React.createRef();\n\t}\n\n\tstartAtTop = () => window.scrollTo(0, this.top.current.offsetTop);\n\n\tjumpToExperiences = () => window.scrollTo(0, this.experiences.current.offsetTop - 20);\n\n\tjumpToProjects = () => window.scrollTo(0, this.projects.current.offsetTop);\n\n\tcomponentDidMount() {\n\t\tthis.startAtTop();\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({ didMount: true });\n\t\t}, 0);\n\t\tthis.setState(this.props.location.state);\n\t\twindow.addEventListener('scroll', this.listenScrollEvent);\n\t}\n\n\tlistenScrollEvent = e => {\n\t\tthis.setState({didScroll: true});\n\t\tconsole.log('I scrolled')\n\t\tlet scrollTop = e.target.scrollingElement.scrollTop, lastScrollTop = this.state.lastScrollTop;\n\n/* \t\tif(Math.abs(lastScrollTop - scrollTop) <= this.state.delta) {\n\t\t\treturn;\n\t\t}\n\t\t */\n\t\tif (scrollTop > lastScrollTop && scrollTop > 90) {\n\t\t\tthis.setState({scrollUp: true})\n\t\t}\n/*     // Make sure they scroll more than delta\n    if(Math.abs(lastScrollTop - scrollTop) <= this.state.delta)\n        return;\n    \n    // If they scrolled down and are past the navbar, add class .nav-up.\n    // This is necessary so you never see what is \"behind\" the navbar.\n    if (scrollTop > lastScrollTop && scrollTop > this.state.navbarHeight){\n        // Scroll Down\n        $('header').removeClass('nav-down').addClass('nav-up');\n    } else {\n        // Scroll Up\n        if(scrollTop + $(window).height() < $(document).height()) {\n            $('header').removeClass('nav-up').addClass('nav-down');\n        }\n    } */\n    \n    this.setState({lastScrollTop: scrollTop});\n\t\t\n\t\tconsole.log(scrollTop)\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"home\">\n\t\t\t\t<Navbar jump={this.jumpToExperiences} jump2={this.jumpToProjects} top={this.top} scrollUp={this.state.scrollUp}/>\n\t\t\t\t<Cover jump={this.jumpToExperiences} />\n\t\t\t\t<Experiences experiences={this.experiences} />\n\t\t\t\t<Projects projects={this.projects} />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}