{"ast":null,"code":"var _jsxFileName = \"/Users/sarahalt/code/power/sarahalt/client/src/components/Home/Map.js\";\nimport React, { Component } from 'react';\nimport { ComposableMap, Geographies, Geography, Marker } from 'react-simple-maps';\nconst geoUrl = 'https://raw.githubusercontent.com/seabysalt/maps/master/maps.json';\nconst markers = [{\n  markerOffset: 15,\n  name: \"San Francisco\",\n  coordinates: [-122.4312, 37.7739]\n}, {\n  markerOffset: 15,\n  name: \"Houston\",\n  coordinates: [-95.3584, 29.7499]\n}, {\n  markerOffset: 15,\n  name: \"France\",\n  coordinates: [4.8467, 45.7485]\n}, {\n  markerOffset: 15,\n  name: \"Spain\",\n  coordinates: [-5.6638, 40.9688]\n}, {\n  markerOffset: 15,\n  name: \"Germany\",\n  coordinates: [11.5761, 48.1371]\n}, {\n  markerOffset: 15,\n  name: \"Tanzania\",\n  coordinates: [35.7454, -6.1611]\n}, {\n  markerOffset: 15,\n  name: \"UK\",\n  coordinates: [-0.1180, 51.5098]\n}, {\n  markerOffset: 15,\n  name: \"Ecuador\",\n  coordinates: [-78.4678, -0.1806]\n}];\nexport default class Map extends Component {\n  seeExperience(coordinates) {\n    console.log(coordinates);\n  }\n\n  render() {\n    const country = this.props.country;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map_detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ComposableMap, {\n      viewBox: \"50 0 550 600\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Geographies, {\n      geography: geoUrl,\n      fill: \"#D6D6DA\",\n      stroke: \"#FFFFFF\",\n      strokeWidth: 0.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }\n    }, ({\n      geographies\n    }) => geographies.map(geo => /*#__PURE__*/React.createElement(Geography, {\n      key: geo.rsmKey,\n      geography: geo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 55\n      }\n    }))), markers.map(({\n      name,\n      coordinates,\n      markerOffset\n    }) => /*#__PURE__*/React.createElement(Marker, {\n      key: name,\n      coordinates: coordinates,\n      onClick: () => this.props.seeExperience(name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"g\", {\n      fill: \"none\",\n      stroke: `${country === name ? '#ff5b3e' : '#0a0a0a'}`,\n      strokeWidth: \"2\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      transform: \"translate(-12, -24)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, country === name ? /*#__PURE__*/React.createElement(\"circle\", {\n      cx: \"12\",\n      cy: \"6\",\n      r: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 34\n      }\n    }) : '#0a0a0a', /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M12 21.7 C17.3 17 20 10 20 10 a9 9 0 1 0-16 0 c1 3 3.5 8.1 8 11.7 z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/sarahalt/code/power/sarahalt/client/src/components/Home/Map.js"],"names":["React","Component","ComposableMap","Geographies","Geography","Marker","geoUrl","markers","markerOffset","name","coordinates","Map","seeExperience","console","log","render","country","props","geographies","map","geo","rsmKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ComposableMap, Geographies, Geography, Marker } from 'react-simple-maps';\n\nconst geoUrl = 'https://raw.githubusercontent.com/seabysalt/maps/master/maps.json';\n\nconst markers = [\n  {\n    markerOffset: 15,\n    name: \"San Francisco\",\n    coordinates: [-122.4312, 37.7739]\n  },\n  { markerOffset: 15, name: \"Houston\", coordinates: [-95.3584, 29.7499] },\n  { markerOffset: 15, name: \"France\", coordinates: [4.8467, 45.7485] },\n  { markerOffset: 15, name: \"Spain\", coordinates: [-5.6638, 40.9688] },\n  { markerOffset: 15, name: \"Germany\", coordinates: [11.5761, 48.1371] },\n  { markerOffset: 15, name: \"Tanzania\", coordinates: [35.7454, -6.1611] },\n  { markerOffset: 15, name: \"UK\", coordinates: [-0.1180, 51.5098] },\n  { markerOffset: 15, name: \"Ecuador\", coordinates: [-78.4678, -0.1806] },\n];\n\nexport default class Map extends Component {\n\n  seeExperience(coordinates) {\n    console.log(coordinates)\n  }\n\n\trender() {\n    const country = this.props.country\n\t\treturn (\n\t\t\t<div className=\"map_detail\">\n\t\t\t\t<ComposableMap viewBox=\"50 0 550 600\">\n\t\t\t\t\t<Geographies geography={geoUrl} fill=\"#D6D6DA\" stroke=\"#FFFFFF\" strokeWidth={0.5}>\n\t\t\t\t\t\t{({ geographies, }) => geographies.map((geo) => <Geography key={geo.rsmKey} geography={geo}/>)}\n\t\t\t\t\t</Geographies>\n\t\t\t\t\t{markers.map(({ name, coordinates, markerOffset }) => (\n        <Marker key={name} coordinates={coordinates}  onClick={() => this.props.seeExperience(name)} >\n          <g\n            fill=\"none\"\n            stroke={`${country === name ? '#ff5b3e' : '#0a0a0a'}`}\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            transform=\"translate(-12, -24)\"\n          >\n            {country === name ? (<circle cx=\"12\" cy=\"6\" r=\"3\" />) : ('#0a0a0a')}\n            <path d=\"M12 21.7\n            C17.3 17 20 10 20 10\n            a9 9 0 1 0-16 0\n            c1 3 3.5 8.1 8 11.7\n            z\" />\n          </g>\n        </Marker>\n        ))}\n\t\t\t\t</ComposableMap>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}