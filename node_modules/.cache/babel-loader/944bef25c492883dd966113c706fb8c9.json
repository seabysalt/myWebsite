{"ast":null,"code":"var _jsxFileName = \"/Users/sarahalt/code/power/sarahalt/client/src/components/General/Navbar.js\";\nimport React, { Component } from 'react';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleHover = x => {\n      this.setState({\n        hover: !this.state.hover\n      }, () => this.color(x));\n    };\n\n    this.color = x => {\n      let hoverStyle = this.props.hoverColor;\n\n      if (this.state.hover) {\n        if (x === 'experiences') {\n          this.setState({\n            hoverExperiences: hoverStyle\n          });\n        } else if (x === 'projects') {\n          this.setState({\n            hoverProjects: hoverStyle\n          });\n        } else if (x === 'contacts') {\n          this.setState({\n            hoverContacts: hoverStyle\n          });\n        } else if (x === 'main' && !this.props.showContact) {\n          this.setState({\n            hoverTitle: hoverStyle\n          });\n        }\n      } else {\n        this.setState({\n          hoverExperiences: this.props.colorMenu,\n          hoverProjects: this.props.colorMenu,\n          hoverContacts: this.props.colorMenu,\n          hoverTitle: this.props.colorTitle\n        });\n      }\n    };\n\n    this.state = {\n      hover: false,\n      hoverTitle: this.props.colorTitle\n    };\n  }\n\n  render() {\n    const hoverExperiences = this.state.hoverExperiences;\n    const hoverProjects = this.state.hoverProjects;\n    const hoverContacts = this.state.hoverContacts;\n    const hoverTitle = this.state.hoverTitle;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"navbar\",\n      className: `${this.props.scrollUp && 'scrollUp'}`,\n      ref: this.props.top,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: hoverTitle\n      },\n      onClick: () => this.props.main('main'),\n      onMouseOver: () => this.toggleHover('main'),\n      onMouseLeave: () => this.toggleHover('main'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, \"Sarah Alt\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navbar_sections\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.props.jump,\n      onMouseOver: () => this.toggleHover('experiences'),\n      style: {\n        color: hoverExperiences,\n        borderBottomColor: hoverExperiences\n      },\n      onMouseLeave: () => this.toggleHover('experiences'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }\n    }, \"Experiences\"), /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.props.jump2,\n      style: {\n        color: hoverProjects,\n        borderBottomColor: hoverProjects\n      },\n      onMouseOver: () => this.toggleHover('projects'),\n      onMouseLeave: () => this.toggleHover('projects'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }\n    }, \"Projects\"), this.props.showContact ? /*#__PURE__*/React.createElement(\"p\", {\n      onClick: () => this.props.contact(),\n      onMouseOver: () => this.toggleHover('contacts'),\n      style: {\n        color: hoverContacts,\n        borderBottomColor: hoverContacts\n      },\n      onMouseLeave: () => this.toggleHover('contact'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, \"Contact\") : null));\n  }\n\n}\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/sarahalt/code/power/sarahalt/client/src/components/General/Navbar.js"],"names":["React","Component","Navbar","constructor","props","toggleHover","x","setState","hover","state","color","hoverStyle","hoverColor","hoverExperiences","hoverProjects","hoverContacts","showContact","hoverTitle","colorMenu","colorTitle","render","scrollUp","top","main","jump","borderBottomColor","jump2","contact"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thover: false,\n\t\t\thoverTitle: this.props.colorTitle,\n\t\t};\n\t}\n\n\ttoggleHover = (x) => {\n\t\tthis.setState({ hover: !this.state.hover }, () => this.color(x));\n\t};\n\n\tcolor = (x) => {\n\t\tlet hoverStyle = this.props.hoverColor;\n\t\tif (this.state.hover) {\n\t\t\tif (x === 'experiences') {\n\t\t\t\tthis.setState({ hoverExperiences: hoverStyle });\n\t\t\t} else if (x === 'projects') {\n\t\t\t\tthis.setState({ hoverProjects: hoverStyle });\n\t\t\t} else if (x === 'contacts') {\n\t\t\t\tthis.setState({ hoverContacts: hoverStyle });\n\t\t\t} else if (x === 'main' && !this.props.showContact) {\n\t\t\t\tthis.setState({ hoverTitle: hoverStyle });\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\thoverExperiences: this.props.colorMenu,\n\t\t\t\thoverProjects: this.props.colorMenu,\n\t\t\t\thoverContacts: this.props.colorMenu,\n\t\t\t\thoverTitle: this.props.colorTitle,\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\tconst hoverExperiences = this.state.hoverExperiences;\n\t\tconst hoverProjects = this.state.hoverProjects;\n\t\tconst hoverContacts = this.state.hoverContacts;\n\t\tconst hoverTitle = this.state.hoverTitle;\n\n\t\treturn (\n\t\t\t<div id=\"navbar\" className={`${this.props.scrollUp && 'scrollUp'}`} ref={this.props.top}>\n\t\t\t\t<h3\n\t\t\t\t\tstyle={{ color: hoverTitle }}\n\t\t\t\t\tonClick={() => this.props.main('main')}\n\t\t\t\t\tonMouseOver={() => this.toggleHover('main')}\n\t\t\t\t\tonMouseLeave={() => this.toggleHover('main')}\n\t\t\t\t>\n\t\t\t\t\tSarah Alt\n\t\t\t\t</h3>\n\t\t\t\t<div className=\"navbar_sections\">\n\t\t\t\t\t<p\n\t\t\t\t\t\tonClick={this.props.jump}\n\t\t\t\t\t\tonMouseOver={() => this.toggleHover('experiences')}\n\t\t\t\t\t\tstyle={{ color: hoverExperiences, borderBottomColor: hoverExperiences }}\n\t\t\t\t\t\tonMouseLeave={() => this.toggleHover('experiences')}\n\t\t\t\t\t>\n\t\t\t\t\t\tExperiences\n\t\t\t\t\t</p>\n\t\t\t\t\t<p\n\t\t\t\t\t\tonClick={this.props.jump2}\n\t\t\t\t\t\tstyle={{ color: hoverProjects, borderBottomColor: hoverProjects }}\n\t\t\t\t\t\tonMouseOver={() => this.toggleHover('projects')}\n\t\t\t\t\t\tonMouseLeave={() => this.toggleHover('projects')}\n\t\t\t\t\t>\n\t\t\t\t\t\tProjects\n\t\t\t\t\t</p>\n\t\t\t\t\t{this.props.showContact ? (\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tonClick={() => this.props.contact()}\n\t\t\t\t\t\t\tonMouseOver={() => this.toggleHover('contacts')}\n\t\t\t\t\t\t\tstyle={{ color: hoverContacts, borderBottomColor: hoverContacts }}\n\t\t\t\t\t\t\tonMouseLeave={() => this.toggleHover('contact')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tContact\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}